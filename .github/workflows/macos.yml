name: macOS

on:
  push:
#   branches:
#   - master

jobs:
  build:
    name: py-${{ matrix.py.ver }} libgit2-${{ matrix.libgit2}}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        libgit2: ['maint/v1.1']
        py:
          - ver: '3.6'
            release: '3.6.8'  # last Python.org binary release
          - ver: '3.7'
            release: '3.7.9'  # last Python.org binary release
          - ver: '3.8'
            release: '3.8.7'
          - ver: '3.9'
            release: '3.9.1'
    env:
      MACOSX_DEPLOYMENT_TARGET: "10.9"
    steps:
      - name: checkout pygit2
        uses: actions/checkout@v2
        with:
          path: pygit2

      - name: setup python
        run: |
          PKG="python-${{ matrix.py.release }}-macosx10.9.pkg"
          URL="https://www.python.org/ftp/python/${{ matrix.py.release }}/$PKG"
          wget --no-verbose -N "$URL"
          sudo installer -pkg $PKG -target /
          export PATH=/Library/Frameworks/Python.framework/Versions/${{ matrix.py.ver }}/bin:$PATH
          echo "/Library/Frameworks/Python.framework/Versions/${{ matrix.py.ver }}/bin" >> $GITHUB_PATH
          which python3
          python3 -VV
          test "$(python3 -V)" = "Python ${{ matrix.py.release }}"


      - name: setup
        run: |
          python3 -m venv venv/
          export PATH="${{ github.workspace }}/venv/bin:$PATH"
          echo "${{ github.workspace }}/venv/bin" >> $GITHUB_PATH

      - name: checkout libgit2
        uses: actions/checkout@v2
        with:
          repository: libgit2/libgit2
          path: libgit2
          ref: ${{ matrix.libgit2 }}

      - name: build libgit2
        id: libgit2
        working-directory: libgit2
        env:
          PKG_CONFIG_PATH: /dev/null
        run: |
          mkdir env/
          cmake . -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/libgit2/env -DBUILD_CLAR=OFF
          cmake --build . --target install
          otool -L "${{ github.workspace }}/libgit2/env/lib/libgit2.dylib"
          VERSION=$(PKG_CONFIG_PATH=$(pwd) pkg-config --modversion libgit2)
          echo "::set-output name=version::$VERSION"

      - name: build pygit2
        id: pygit2
        working-directory: pygit2
        env:
          LIBGIT2: "${{ github.workspace }}/libgit2/env"
          LDFLAGS: "-Wl,-rpath,'${{ github.workspace }}/libgit2/env/lib'"
        run: |
          which pip3
          pip3 install wheel delocate
          python3 setup.py bdist_wheel
          delocate-listdeps dist/pygit2-*macosx*.whl
          delocate-wheel -v -w dist/fixed-wheels/ dist/pygit2-*macosx*.whl
          WHEEL=$(basename dist/fixed-wheels/*.whl)
          echo "::set-output name=wheel::$WHEEL"
          delocate-listdeps dist/fixed-wheels/$WHEEL

      - name: pygit2 tests
        working-directory: pygit2
        run: |
          pip3 install pytest
          mv pygit2 pygit2~
          pip3 install dist/fixed-wheels/pygit2-*.whl
          mkdir -p testresults/
          pytest -v test/ --junitxml=testresults/testresults.xml


      - name: save test results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: "test-results-py_${{ matrix.py.ver }}-libgit2_${{ steps.libgit2.outputs.version }}"
          path: pygit2/testresults/

      - name: save wheel
        uses: actions/upload-artifact@v1
        with:
          name: "macOS-wheel-py_${{ matrix.py.ver }}-libgit2_${{ steps.libgit2.outputs.version }}"
          path: pygit2/dist/fixed-wheels/
